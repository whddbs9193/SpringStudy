<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

<context:component-scan base-package="com.springbook.biz"/>

<!-- DBCP 설정 -->
<context:property-placeholder location="classpath:config/database.properties"/>
<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
	<property name="driverClassName" value="${jdbc.driver}"></property>
	<property name="url" value="${jdbc.url}"></property>
	<property name="username" value="${jdbc.username}"></property>
	<property name="password" value="${jdbc.password}"></property>
</bean>

<!-- Spring-JDBC 설정 -->
<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
	<property name="dataSource" ref="dataSource"></property>
</bean>


<!-- ####################################### -->
<!-- 2. 트랜잭션 설정 (annotation 기반) -->
<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource"></property>
</bean>

<tx:annotation-driven transaction-manager="txManager"/>



<!-- ####################################### -->
<!-- 1. 트랜잭션 설정 (xml 기반) -->
<!-- Transaction 관리자 설정 -->
 <!-- <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource"></property>
</bean> -->

<!-- Transaction Advice 설정 -->
<!-- <tx:advice id="txAdvice" transaction-manager="txManager">
	<tx:attributes>
		<tx:method name="get*" read-only="true"/> get으로 시작하는 메소드는 트랜잭션 대상에서 제외
		<tx:method name="*"/>					   나머지 모든 메소드는 트랜잭션 대상이 됨
	</tx:attributes>
</tx:advice> -->

<!-- Transaction AOP 설정 -->
<!-- <aop:config>
	<aop:pointcut expression="execution(* com.springbook.biz..*Impl.*(..))" id="txPointcut"/>
	<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
</aop:config> -->

<!-- #################### -->
<!-- 2. AOP 설정 (annotation 기반) -->
<!-- <aop:aspectj-autoproxy></aop:aspectj-autoproxy> -->

<!-- 1. AOP 설정 (xml 기반) -->
<!--
<bean id="around" class="com.springbook.biz.common.AroundAdvice"></bean>

<aop:config>
	<aop:pointcut expression="execution(* com.springbook.biz..*Impl.get*(..))" id="getPointcut"/>
	<aop:pointcut expression="execution(* com.springbook.biz..*Impl.*(..))" id="allPointcut"/>
	<aop:aspect ref="around">
		<aop:around pointcut-ref="allPointcut" method="aroundLog"/>
	</aop:aspect>
</aop:config>
-->

</beans>
